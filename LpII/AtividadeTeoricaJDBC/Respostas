1. O que é a classe DriverManager no contexto JDBC?
a) Gerencia as conexões com bancos de dados

2. Qual é a principal função da classe Connection no JDBC?
b) Representar uma conexão física com o banco de dados

3. Qual método é usado para estabelecer uma conexão com o banco de dados usando o
DriverManager?
a) getConnection()

4. Qual das alternativas NÃO é uma maneira correta de fechar um objeto
Connection?
b) DriverManager.closeConnection()

5. Qual método da interface Statement é utilizado para executar consultas que
retornam resultados de um banco de dados?
a) executeQuery()

6. Para executar uma instrução SQL pré-compilada, qual das interfaces abaixo é a mais
apropriada?
b) PreparedStatement

7. O que o método executeUpdate() retorna quando executado?
a) O número de linhas afetadas pela instrução

8. Ao usar PreparedStatement, qual a principal vantagem em relação ao
Statement?
a) PreparedStatement permite a compilação da instrução SQL uma vez e sua
reutilização

9. Qual das seguintes afirmações é verdadeira sobre PreparedStatement?
a) Pode ser usado para evitar injeção de SQL

10. Qual método é utilizado para definir parâmetros em uma instrução SQL com
PreparedStatement?
c) setString(), setInt(), etc.

11. Qual o método utilizado para abrir transações manualmente ao trabalhar com um
objeto Connection?
c) beginTransaction()

12. O método executeQuery() de um PreparedStatement retorna qual tipo de
objeto?
b) ResultSet

13. Como é possível executar múltiplas consultas SQL em uma única conexão usando
um Statement?
a) Utilizando o método executeBatch()

14. Qual a melhor maneira de garantir que recursos JDBC, como Connection,
Statement e ResultSet, sejam liberados após o uso?
b) Utilizando o recurso try-with-resources

15. Para evitar o carregamento manual de drivers, a partir de qual versão do JDBC o
método Class.forName() para registrar drivers tornou-se opcional?
c) JDBC 4.0